
"------------------------------------------------------------------
set nocompatible       " vimですよ(最初に書く)
set shellslash
filetype plugin indent on     " (5)
syntax enable
"
set lines=30
set columns=80
"
"set encoding=utf-8
"set fileencodings=utf-8,cp932,euc-jp,sjis
"
"-------------------------------------------------------




"guioptionのトグル
function! ToggleGuiOptions(flag_option)
  if a:flag_option ==? 'T' " ツールバーの表示/非表示
    if &guioptions =~# 'T'
      set guioptions-=T
    else
      set guioptions+=T
    endif
  elseif a:flag_option ==? 'm' "メニューバーの表示/非表示
    if &guioptions =~# 'm'
      set guioptions-=m
    else
      set guioptions+=m
    endif
  elseif a:flag_option ==? 'r' "右スクロールバーの表示/非表示
    if &guioptions =~# 'r'
      set guioptions-=r
    else
      set guioptions+=r
    endif
  elseif a:flag_option ==? 'l' "左スクロールバーの表示/非表示
    if &guioptions =~# 'l'
      set guioptions-=l
    else
      set guioptions+=l
    endif
  else
    echo 'bad parameter :' . a:flag_option
  endif
endfunction



" fullscreen
"-----------------------------------------------------------
nnoremap <F11> :call ToggleFullScreen()<CR>
function! ToggleFullScreen()
  if &guioptions =~# 'C'
    set guioptions-=C
    if exists('s:go_temp')
      if s:go_temp =~# 'm'
        set guioptions+=m
      endif
      if s:go_temp =~# 'T'
        set guioptions+=T
      endif
    endif
    simalt ~r
  else
    let s:go_temp = &guioptions
    set guioptions+=C
    set guioptions-=m
    set guioptions-=T
    simalt ~x
  endif
endfunction

" ツールバーの表示/非表示
nnoremap <silent><F4> :call ToggleGuiOptions('T')<CR>
"メニューバーの表示/非表示
nnoremap <silent><F3>  :call ToggleGuiOptions('m')<CR>

"--------------------------------------------------
if has('kaoriya')
  set iminsert=1 imsearch=0
endif
"--------------------------------------------------

"---------------------------------


"Vim7.3新機能

if has('persistent_undo')
  set undodir=./vimundo,~/vimundo
  augroup vimrc-undofile
    autocmd!
	"~/以下のファイルのみ有効
    autocmd bufReadPre ~/* setlocal undofile
  augroup END
endif

set autochdir
"
"現在のファイル名を挿入
if has('win32')
nnoremap <silent> gkf :let @*=expand('%:p')<CR>:echo "Copy filename to noname register."<CR>
elseif has('unix')
nnoremap <silent> gkf :let @"=expand('%:p')<CR>:echo "Copy filename to noname register."<CR>
endif

"現在編集中のバッファのファイル名を変更 
command! -nargs=+ -bang -complete=file Rename let pbnr=fnamemodify(bufname('%'), ':p')|exec 'f '.escape(<q-args>, ' ')|w<bang>|call delete(pbnr)

"行の"中央に移動
noremap <expr> gm (virtcol('$')/2).'\|'


"-------------------------------------------------------------------------------
"CTRL-A で8進数の計算をさせない
set nrformats-=octal
"-------------------------------------------------------------------------------
"Altキーでメニューを開かない
set winaltkeys=no 

"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" ステータスライン
set laststatus=2 " 常にステータスラインを表示
set statusline=%<%F\ %r%h%w%y%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%4v(ASCII=%03.3b,HEX=%02.2B)\ %l/%L(%P)%m
"コマンドラインの高さ
set cmdheight=1
"-------------------------------------------------------


"set fileencodings=iso-2022-jp,iso-2022-jp-2,utf-8,euc-jp,sjis


set noerrorbells
set visualbell
"set viminfo='1000,f1,<500,:100,@100,/50,%


"-------------------------------------------------------------------------------
" 基本設定
" let mapleader = ","            " キーマップリーダー
set scrolloff=5                " スクロール時の余白確保
set textwidth=0                " 一行に長い文章を書いていても自動折り返しをしない
set backupdir=~/vimfiles/backup                 " バックアップ取らない
set autoread                   " 他で書き換えられたら自動で読み直す
set noswapfile                 " スワップファイル作らない
set hidden                     " 編集中でも他のファイルを開けるようにする
set backspace=indent,eol,start " バックスペースでなんでも消せるように
set formatoptions=lmoq         " テキスト整形オプション，マルチバイト系を追加
set vb t_vb=                   " ビープをならさない
set browsedir=buffer           " Exploreの初期ディレクトリ
set whichwrap=b,s,h,l,<,>,[,]  " カーソルを行頭、行末で止まらないようにする


"-------------------------------------------------------------------------------
" 表示
set showmatch         " 括弧の対応をハイライト
set showcmd           " 入力中のコマンドを表示
set number            " 行番号表示
"set list              " 不可視文字表示
set listchars=tab:>.,trail:_,extends:>,precedes:<" 不可視文字の表示形式
set display=uhex      " 印字不可能文字を16進数で表示


" カレントウィンドウにのみ罫線を引く
augroup cch
autocmd! cch
autocmd WinLeave * set nocursorline
autocmd WinEnter,BufRead * set cursorline
augroup END




"-------------------------------------------------------------------------------
" インデント
set autoindent
set smartindent
set cindent
" softtabstopはTabキー押し下げ時の挿入される空白の量，0の場合はtabstopと同じ，BSにも影響する
set tabstop=4 shiftwidth=4 softtabstop=0
set noexpandtab " タブをスペースに展開しない


"-------------------------------------------------------------------------------
" 補完・履歴
set wildmenu           " コマンド補完を強化
set wildchar=<tab>     " コマンド補完を開始するキー
set wildmode=list:full " リスト表示，最長マッチ
set history=1000       " コマンド・検索パターンの履歴数
set complete+=k        " 補完に辞書ファイル追加


"-------------------------------------------------------------------------------
" 検索設定
set wrapscan   " 最後まで検索したら先頭へ戻る
set ignorecase " 大文字小文字無視
set smartcase  " 大文字ではじめたら大文字小文字無視しない
set incsearch  " インクリメンタルサーチ
set hlsearch   " 検索文字をハイライト

"選択した文字列を検索
vnoremap <silent> // y/<C-R>=escape(@", '\\/.*$^~[]')<CR><CR>
"選択した文字列を置換
vnoremap /r "xy:%s/<C-R>=escape(@x, '\\/.*$^~[]')<CR>//gc<Left><Left><Left>


" 検索などで飛んだらそこを真ん中に
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz
nmap G Gzz

"シェルをPowerShellに
set shell=powershell.exe"


